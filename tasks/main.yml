- name: Check for Xcode Command Line Tools
  stat:
    path: /Library/Developer/CommandLineTools
  register: xcode_cl_tools
  tags:
    - macos
    - xcode
    - homebrew

- name: Login to continue
  pause:
    prompt: "Login to complete the installation of the Xcode comamnd line tools. Press Enter when logged in"
  when: not xcode_cl_tools.stat.exists
  tags:
    - macos
    - xcode
    - homebrew
    - prompt

- name: Install Xcode command line tools
  command: xcode-select --install
  args:
    creates: "/Library/Developer/CommandLineTools"
  tags:
    - macos
    - xcode
    - homebrew

- name: Wait until command line tools are installed
  wait_for:
    path: "/private/tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress"
    timeout: 600
    state: absent
  tags:
    - macos
    - xcode
    - homebrew

- name: Install Homebrew
  shell: 'echo "\r" | ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"'
  args:
    creates: "/usr/local/bin/brew"
  become: no
  tags:
    - macos
    - homebrew

- name: Install Homebrew taps
  homebrew_tap:
    tap: "{{ item }}"
    state: present
  loop: "{{ homebrew_taps | default([]) }}"
  become: no
  tags:
    - macos
    - homebrew
    - packages
    - cask

- name: Install Homebrew packages
  homebrew:
    update_homebrew: yes
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('latest') }}"
    install_options: "{{ item.install_options | default(omit) }}"
  become: no
  loop: "{{ homebrew_packages }}"
  ignore_errors: yes
  tags:
    - macos
    - homebrew
    - packages

- name: Install Homebrew Cask apps
  homebrew_cask:
    name: "{{ item }}"
    state: present
    install_options: "appdir={{ homebrew_cask_appdir }},caskroom={{ homebrew_caskroom }}"
  loop: "{{ homebrew_cask_apps }}"
  ignore_errors: yes
  become: no
  tags:
    - macos
    - homebrew
    - packages
    - cask

